name: Continuous Integration
env:
  DOCKER_IMAGE: wyrihaximusnet/github-action-runner
on:
  push:
  schedule:
    - cron:  '0 0 * * 0'
jobs:
  supported-platform-matrix:
    name: Supported processor platforms
    runs-on: ubuntu-latest
    outputs:
      platform: ${{ steps.supported-platform-matrix.outputs.platform }}
    steps:
      - id: supported-platform-matrix
        name: Generate platform
        uses: WyriHaximus/github-action-oci-image-supported-platforms@main
  lint-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Lint Dockerfile
        uses: docker://hadolint/hadolint:latest-debian
        with:
          entrypoint: hadolint
          args: ./Dockerfile
  build-docker-image:
    name: Build ${{ matrix.platform }} image
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.supported-platform-matrix.outputs.platform) }}
    needs:
      - supported-platform-matrix
      - lint-dockerfile
    runs-on: ${{ contains(matrix.platform, 'arm') && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    steps:
      - name: Runner Arch
        run: echo "${{ runner.arch }}"
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
        if: ${{ !contains(matrix.platform, 'arm') && !contains(matrix.platform, 'amd64') }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - run: mkdir ./docker-image
      - run: docker image build --platform=${{ matrix.platform }} --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`git rev-parse --short HEAD` -t "${DOCKER_IMAGE}:${{ env.PLATFORM_PAIR }}" --no-cache .
      - run: docker save "${DOCKER_IMAGE}:${{ env.PLATFORM_PAIR }}" -o ./docker-image/docker_image-${{ env.PLATFORM_PAIR }}.tar
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: docker-image-${{ env.PLATFORM_PAIR }}
          path: ./docker-image
  scan-vulnerability:
    name: Scan for vulnerabilities (${{ matrix.platform }})
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.supported-platform-matrix.outputs.platform) }}
    needs:
      - supported-platform-matrix
      - build-docker-image
    runs-on: ${{ contains(matrix.platform, 'arm') && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    steps:
      - name: Runner Arch
        run: echo "${{ runner.arch }}"
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: docker-image-${{ env.PLATFORM_PAIR }}
          path: /tmp/docker-image
      - run: docker load --input /tmp/docker-image/docker_image-${{ env.PLATFORM_PAIR }}.tar
      - run: rm -Rf /tmp/docker-image/
      - run: echo -e "${{ env.DOCKER_IMAGE }}:${{ env.PLATFORM_PAIR }}" | xargs -I % sh -c 'docker run -v /tmp/trivy:/var/lib/trivy -v /var/run/docker.sock:/var/run/docker.sock -t aquasec/trivy:latest --cache-dir /var/lib/trivy image --exit-code 1 --no-progress --format table % || true'
  tests:
    name: Test ${{ matrix.platform }}
    needs:
      - supported-platform-matrix
      - build-docker-image
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.supported-platform-matrix.outputs.platform) }}
    runs-on: ${{ contains(matrix.platform, 'arm') && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    steps:
      - name: Runner Arch
        run: echo "${{ runner.arch }}"
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
        if: ${{ !contains(matrix.platform, 'arm') && !contains(matrix.platform, 'amd64') }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: docker-image-${{ env.PLATFORM_PAIR }}
          path: /tmp/docker-image
      - run: docker load --input /tmp/docker-image/docker_image-${{ env.PLATFORM_PAIR }}.tar
      - run: docker image ls -a
      - uses: WyriHaximus/github-action-testinfra@727322fd9276c4bf60e734aa93d1f92893365d5b # v1.0.2
        with:
          image: ${{ env.DOCKER_IMAGE }}:${{ env.PLATFORM_PAIR }}
          flags: --platform="${{ matrix.platform }}"
          cmd: node
  push-image:
    if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'
    name: Push
    needs:
      - supported-platform-matrix
      - scan-vulnerability
      - tests
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:3
        ports:
          - 5000:5000
    steps:
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@887e4db9af58ebae64998b7105921b816af77977 # v2.0
        with:
          format: 'YYYY.MM.DD'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
        with:
          driver-opts: network=host
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: docker-image-*
          path: /tmp/docker-image
          merge-multiple: true
      - run: ls -lasth /tmp/docker-image/
      - run: |
          for f in /tmp/docker-image/docker_image-*.tar; do
            docker load --input $f
          done
      - run: rm -Rf /tmp/docker-image/
      - run: docker images
      - run: |
          archs=${{ join(fromJson(needs.supported-platform-matrix.outputs.platform), ',') }}
          for arch in ${archs//,/ }
          do
            docker tag "${{ env.DOCKER_IMAGE }}:${arch//\//-}" "localhost:5000/${{ env.DOCKER_IMAGE }}:${arch//\//-}"
            docker push "localhost:5000/${{ env.DOCKER_IMAGE }}:${arch//\//-}"
          done
      - run: docker images
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker info
        run: docker info
      - name: Create merge Dockerfile
        run: echo "FROM localhost:5000/${{ env.DOCKER_IMAGE }}:\${TARGETOS}-\${TARGETARCH}" >> docker-file-${{ matrix.registry }}-wyrihaximusnet-github-action-runner
      - run: cat docker-file-${{ matrix.registry }}-wyrihaximusnet-github-action-runner
      - name: Merged different arch images into one
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: .
          file: docker-file-${{ matrix.registry }}-wyrihaximusnet-github-action-runner
          tags: ghcr.io/${{ env.DOCKER_IMAGE }}:latest,ghcr.io/${{ env.DOCKER_IMAGE }}:${{ steps.time.outputs.time }}
          platforms: ${{ join(fromJson(needs.supported-platform-matrix.outputs.platform), ',') }}
